{"version":3,"sources":["components/settingsCounter/input.jsx","components/button/buttonCounter.jsx","components/settingsCounter/settingsCounter.jsx","components/windowCounter/windowCounter.jsx","redux/reducer.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["Input","props","disabledSetBtn","maxValue","startValue","className","title","TextField","label","variant","type","onChange","e","addValue","target","value","error","ButtonCounter","Button","onClick","clickHandler","disabled","color","style","padding","borderRadius","border","SettingsCounter","setStartValue","count","setMaxValue","setSettingsCounter","WindowCounter","incCounter","resCounter","setCounter","initialState","App","useState","Number","setCount","localStorage","getItem","console","log","dispatch","useDispatch","useEffect","setItem","valueAsStringGet","newValue","JSON","parse","setCounterAC","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducerPuc","combineReducers","counterReducer","state","action","store","createStore","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f967397b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\nconst Input = (props) => {\r\n    const disabledSetBtn = props.maxValue < 0 || props.startValue < 0 || props.maxValue === props.startValue || props.maxValue < props.startValue\r\n\r\n    return (\r\n        <div className={'input'}>\r\n            <span>{props.title} :</span>\r\n            <TextField label={!disabledSetBtn ? \"Select number...\" : 'Incorrect value'} variant=\"outlined\"\r\n                       type={'number'}\r\n                       onChange={(e) => props.addValue(e.target.value)} value={props.value}\r\n                       error={disabledSetBtn}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst ButtonCounter = (props) => {\r\n    return (\r\n        <Button\r\n            onClick={() => props.clickHandler()}\r\n            disabled={props.disabled}\r\n            variant=\"outlined\" color=\"primary\"\r\n            style={{padding: '20px 60px', borderRadius: '10px', border: '3px solid'}}>\r\n            {props.title}\r\n\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default ButtonCounter;\r\n","import React from 'react';\r\nimport Input from \"./input\";\r\nimport ButtonCounter from \"../button/buttonCounter\";\r\n\r\nconst SettingsCounter = (props) => {\r\n    const disabledSetBtn = props.maxValue < 0 || props.startValue < 0 || props.maxValue === props.startValue || props.maxValue < props.startValue\r\n    return (\r\n        <div className={'setCounter'}>\r\n            <div className={'wrapper'}>\r\n                <div>\r\n                    <Input title={'Start value'} addValue={props.setStartValue} value={props.startValue}\r\n                           startValue={props.count}/>\r\n                    <Input title={'Max value'} addValue={props.setMaxValue} value={props.maxValue}\r\n                           maxValue={props.maxValue} startValue={props.startValue}/>\r\n                </div>\r\n                <div>\r\n                    <ButtonCounter title={'Set'} clickHandler={() => props.setSettingsCounter()}\r\n                                   disabled={disabledSetBtn}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SettingsCounter;\r\n","import React from 'react';\r\n\r\nimport ButtonCounter from \"../button/buttonCounter\";\r\n\r\nconst WindowCounter = (props) => {\r\n    return (\r\n        <div className={'setCounter'}>\r\n            <div className={'windowBox'}>\r\n                <div className={'window'}><span\r\n                    className={props.count >= props.maxValue ? 'error' : ''}>{props.count}</span></div>\r\n                <div className={'windowBtn'}>\r\n                    <ButtonCounter title={'Inc'} clickHandler={() => props.incCounter()}\r\n                                   disabled={props.count >= props.maxValue}/>\r\n                    <ButtonCounter title={'Res'} clickHandler={() => props.resCounter()}\r\n                                   disabled={props.count === props.startValue}/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WindowCounter;\r\n","const incCounter = \"INC_COUNTER\"\r\nconst setCounter = \"SET_COUNTER\"\r\nconst resCounter = \"RES_COUNTER\"\r\n\r\nconst initialState = {count: 1, startValue: 1, maxValue: 5}\r\nexport const counterReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case setCounter:\r\n            return {\r\n                ...state,\r\n                count: action.startValue\r\n            }\r\n        case incCounter :\r\n            return {\r\n                ...state,\r\n                count : state.count + 1\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCounterAC = (startValue) => {\r\n    return {\r\n        type: setCounter, startValue\r\n    }\r\n}\r\nexport const incCounterAC = () => {\r\n    return {\r\n        type: incCounter\r\n    }\r\n}","import './App.css';\nimport SettingsCounter from \"./components/settingsCounter/settingsCounter\";\nimport WindowCounter from \"./components/windowCounter/windowCounter\";\nimport {useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {incCounterAC, setCounterAC} from \"./redux/reducer\";\n\nfunction App() {\n    const [count, setCount] = useState(Number(null))\n    const [startValue, setStartValue] = useState(Number(localStorage.getItem('keyNumber')))\n    const [maxValue, setMaxValue] = useState(Number(5))\n    console.log('count : ' + count)\n    console.log('Start : ' + startValue)\n    console.log('Max : ' + maxValue)\n    //\n    const dispatch = useDispatch()\n    //\n    useEffect(() => {\n        localStorage.setItem('keyNumber', startValue)\n\n    }, [startValue])\n    //\n    useEffect(() => {\n            let valueAsStringGet = localStorage.getItem('keyNumber')\n            if (valueAsStringGet) {\n                let newValue = JSON.parse(valueAsStringGet)\n                setCount(Number(newValue))\n            }\n        }\n        , [])\n\n    //\n\n\n    function setSettingsCounter() {\n        dispatch(setCounterAC(+startValue))\n    }\n\n    //\n    function incCounter() {\n        // dispatch(incCounterAC())\n         setCount(+count + 1)\n    }\n\n    //\n    function resCounter() {\n\n        setCount(+startValue)\n    }\n\n    return (\n        <div className=\"App\">\n            <div className={'app_box'}>\n                <SettingsCounter setSettingsCounter={setSettingsCounter}\n                                 setStartValue={setStartValue}\n                                 startValue={+startValue}\n                                 maxValue={+maxValue}\n                                 setMaxValue={setMaxValue}\n                                 count={count}/>\n                <WindowCounter count={+count} incCounter={incCounter}\n                               maxValue={+maxValue} resCounter={resCounter}\n                               startValue={+startValue}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport {counterReducer} from \"./reducer\";\r\n\r\n\r\nconst reducerPuc = combineReducers({\r\n    counterReducer\r\n})\r\n\r\nexport let store = createStore(reducerPuc)\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}